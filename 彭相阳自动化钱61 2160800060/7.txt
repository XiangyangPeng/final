#include <cv.h>
#include <highgui.h>
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <cmath>
#include <complex>

using namespace std;
using namespace cv;

Mat myHough(Mat edge,int threshold,string WindowName)
{
	Mat Hough=edge.clone();
	vector<Vec2f> lines;
	HoughLines(edge,lines,1,CV_PI/180,threshold,0,0);
	for(int i=0;i<lines.size();i++)
	{
		float rho=lines[i][0],theta=lines[i][1];
		Point pt1,pt2;
		double a=cos(theta),b=sin(theta);
		double x0=a*rho,y0=b*rho;
		pt1.x = cvRound(x0 + 1000*(-b));
		pt1.y = cvRound(y0 + 1000*(a));
		pt2.x = cvRound(x0 - 1000*(-b));
		pt2.y = cvRound(y0 - 1000*(a));
		line( Hough, pt1, pt2, Scalar(128), 1,CV_AA);
	}
	imshow(WindowName,Hough);
	waitKey(0);
	return Hough;
}

int main()
{
	string file="/home/xyz/桌面/数字图像处理/作业/作业-直线检测/test3.jpg";
	Mat image=imread(file,0);
	if(!image.data)
	{
		printf("No image data\n");
		return -1;
	}
	int row=image.rows,col=image.cols;
	//sobel
	Mat grad,grad_x,grad_y,abs_grad_x,abs_grad_y;
	Sobel(image,grad_x,-1,1,0);
	Sobel(image,grad_y,-1,0,1);	
	convertScaleAbs(grad_x,abs_grad_x);
	convertScaleAbs(grad_y,abs_grad_y);
	addWeighted(abs_grad_x,0.5,abs_grad_y,0.5,0,grad);
	imshow("sobel:",grad);
	waitKey(0);
	//imwrite("pictures/6_sobel.bmp",grad);//---
	Mat thr_grad;
	threshold(grad,thr_grad,30,255,THRESH_BINARY);
	imshow("sobel_Threshold:",thr_grad);
	waitKey(0);
	//imwrite("pictures/6_thr_sobel_10.bmp",thr_grad);//---
	//laplacian
	Mat lap,abs_lap;
	Laplacian(image,lap,-1);
	convertScaleAbs(lap,abs_lap);
	imshow("laplace:",abs_lap);
	waitKey(0);
	//imwrite("pictures/6_lap.bmp",abs_lap);	//---
	Mat thr_lap;
	threshold(lap,thr_lap,10,255,THRESH_BINARY);
	imshow("laplace_Threshold:",thr_lap);
	waitKey(0);
	//imwrite("pictures/6_thr_lap_20.bmp",thr_lap);//---
	//canny
	Mat edge(row,col,CV_8UC1,Scalar(0));
	Canny(image,edge,30,90,3);
	imshow("canny:",edge);
	waitKey(0);
	//imwrite("pictures/6_canny_50.bmp",edge);//---
	
	//Hough_canny
	Mat Hcanny=myHough(edge,200,"canny_Hough");
	imwrite("pictures/3_Hcanny_200.bmp",Hcanny);
	//Hough_lap
	Mat Hlap=myHough(thr_lap,200,"lap_Hough");
	imwrite("pictures/3_Hlap_200.bmp",Hlap);
	//Hough_sobel
	Mat Hsobel=myHough(thr_grad,200,"sobel_Hough");
	imwrite("pictures/3_Hsobel_200.bmp",Hsobel);

	return 0;
}
